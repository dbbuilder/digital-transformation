name: Test Schema Changes

on:
  pull_request:
    paths:
      - 'supabase/**'
  push:
    branches-ignore:
      - main

jobs:
  lint-sql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install sqlfluff
        run: |
          pip install sqlfluff

      - name: Lint SQL files
        run: |
          sqlfluff lint supabase/schema.sql --dialect postgres || true
          echo "‚úÖ SQL linting complete (warnings only)"

  dry-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client postgresql

          # Start local PostgreSQL
          sudo systemctl start postgresql

          # Create test database
          sudo -u postgres psql -c "CREATE DATABASE test_db;"
          sudo -u postgres psql -c "CREATE USER test_user WITH PASSWORD 'test_password';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE test_db TO test_user;"

      - name: Test schema on local PostgreSQL
        env:
          PGPASSWORD: test_password
        run: |
          # Try to apply schema
          psql -h localhost -U test_user -d test_db -f supabase/schema.sql -v ON_ERROR_STOP=1

          echo "‚úÖ Schema applied successfully to test database"

      - name: Verify tables created
        env:
          PGPASSWORD: test_password
        run: |
          TABLE_COUNT=$(psql -h localhost -U test_user -d test_db -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = 'public';")

          echo "üìä Tables created: $TABLE_COUNT"

          if [ "$TABLE_COUNT" -lt 10 ]; then
            echo "‚ùå Expected at least 10 tables"
            exit 1
          fi

          echo "‚úÖ All tables created successfully"

      - name: Test RLS policies
        env:
          PGPASSWORD: test_password
        run: |
          # Count RLS policies
          POLICY_COUNT=$(psql -h localhost -U test_user -d test_db -t -c "SELECT COUNT(*) FROM pg_policies;")

          echo "üîí RLS policies created: $POLICY_COUNT"

          if [ "$POLICY_COUNT" -lt 20 ]; then
            echo "‚ö†Ô∏è Expected at least 20 RLS policies, found $POLICY_COUNT"
          else
            echo "‚úÖ RLS policies verified"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            ### Schema Test Results ‚úÖ

            - ‚úÖ SQL syntax valid
            - ‚úÖ Schema applies successfully
            - ‚úÖ All tables created
            - ‚úÖ RLS policies in place

            **Ready to merge!**
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
